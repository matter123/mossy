export
ARCH=64
VENDOR=PC
OBJ_SUFFIX:=$(ARCH)_$(VENDOR)
ClangXX=clang++ --target=x86_64-elf -Wdocumentation
Clang=clang --target=x86_64-elf -Wdocumentation
CC:=$(Clang)
CXX:=$(ClangXX)

CSOURCES:=$(shell find src -name *.c)
COBJECTS:=$(patsubst %.c, %.o.$(OBJ_SUFFIX), $(CSOURCES))
CXXSOURCES:=$(shell find src -name *.cpp)
CXXOBJECTS:=$(patsubst %.cpp, %.o.$(OBJ_SUFFIX), $(CXXSOURCES))
SSOURCES:=$(shell find src -name *.s)
SOBJECTS:=$(patsubst %.s, %.o.$(OBJ_SUFFIX), $(SSOURCES))


all: build

build: check $(COBJECTS) $(CXXOBJECTS) $(SOBJECTS) build_libs link

FFLAGS=-fno-omit-frame-pointer -ffreestanding -fno-stack-protector -fno-common
DFLAGS:=$(DFLAGS) -DARCH=_x64 -DVENDOR=_PC -DDEBUG
MFLAGS=-mcmodel=kernel -mno-red-zone -mno-3dnow
CFLAGS=-O3 -std=c99 $(DFLAGS) $(WFLAGSON) $(WFLAGSOFF) $(FFLAGS) $(MFLAGS) $(IFLAGS)
CXXFLAGS=-O3 -std=c++1y $(DFLAGS) $(WFLAGSON) $(WFLAGSOFF) $(FFLAGS) $(MFLAGS) $(IFLAGS) -fno-rtti \
-fno-exceptions -fdiagnostics-color=auto
LDFLAGS=-static -Tbuild_files/linkx64.ld -ffreestanding -O2 -nostdlib $(FFLAGS) -Llibs -z max-page-size=0x1000
ASFLAGS=-felf64


clean:
	@echo Cleaning workspace
	@find . -name '*.o.$(OBJ_SUFFIX)' -delete
	@find . -name '*.d.$(OBJ_SUFFIX)' -delete
	@rm -f build_files/kernel$(OBJ_SUFFIX)

check:
	#@tools/doccheck.py kernel src
link:
	@echo Linking
	@g++ $(LDFLAGS) -o build_files/kernel$(OBJ_SUFFIX) $(SOBJECTS) $(COBJECTS) $(CXXOBJECTS) -lc$(OBJ_SUFFIX)\
	 -lunicode$(OBJ_SUFFIX) -lacpi$(OBJ_SUFFIX) -lgcc

-include $(CXXOBJECTS:.o.$(OBJ_SUFFIX)=.d.$(OBJ_SUFFIX))
-include $(COBJECTS:.o.$(OBJ_SUFFIX)=.d.$(OBJ_SUFFIX))
-include build_files/dummy64

dummy64: Makefile64 Makefile
	@touch $@
	@$(MAKE) -f Makefile64 clean

%o.$(OBJ_SUFFIX): %s
	@echo Assembling $(patsubst %.o.$(OBJ_SUFFIX), %.s, $@)
	@cpp $(DFLAGS) $(IFLAGS) -DASM -E -P$(patsubst %.o.$(OBJ_SUFFIX), %.s, $@) -o$(patsubst %.o.$(OBJ_SUFFIX), %.cpps, $@)
	@nasm $(ASFLAGS) $(patsubst %.o.$(OBJ_SUFFIX), %.cpps, $@) -o $@
	@rm $(patsubst %.o.$(OBJ_SUFFIX), %.cpps, $@)

%o.$(OBJ_SUFFIX): %c
	@echo Compiling $<
	@$(Clang) $(CFLAGS) -o $@ -c $<
	@$(Clang) -MM $(CFLAGS) $< > $(patsubst %.o.$(OBJ_SUFFIX), %.d.$(OBJ_SUFFIX),$@)

%o.$(OBJ_SUFFIX): %cpp
	@echo Compiling $<
	@$(ClangXX) $(CXXFLAGS) -o $@ -c $<
	@$(ClangXX) -MM $(CXXFLAGS) $< > $(patsubst %.o.$(OBJ_SUFFIX), %.d.$(OBJ_SUFFIX),$@)

build_libs:
	cd libs/clib && $(MAKE) build
	cd libs/unicode && $(MAKE) build
	cd libs/acpi && $(MAKE) build
